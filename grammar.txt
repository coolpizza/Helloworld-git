
<Java grammar>
String arr[] = {"apple","orange","banana","pear","peach","melon"};
        Arrays.sort(arr);
        
		System.out.print("Before : ");
        for (String i : arr) {
            System.out.print("[ "+i+" ] ");
        }
		
		System.out.print("After : ");
		Arrays.sort(arr, Collections.reverseOrder());
		for (String i : arr) {
            System.out.print("[ "+i+" ] ");
        }
----------------------------------------------
// 아래 방법을 쓰면 class 안에 compareTo를 넣지 않고 sort시에 바로 Comparator로 진행.
class Edge {
    int s, e, cost;

    Edge(int s, int e, int cost) {
        this.s = s;
        this.e = e;
        this.cost = cost;
    }
}

ArrayList<Edge> edges = new ArrayList<>();

edges.sort(new Comparator<Edge>() {
            @Override
            public int compare(Edge o1, Edge o2) {
                return Integer.compare(o1.cost, o2.cost);
            }
        });

---------------------------------------------------------

static meet [] mt = new meet[100];
Q queue[] = new Q[100*100*100];
...

mt[i] = new meet(num, start, end);  // 이렇게 입력해야 함. 

//mt[i].num = num;  // --> 이렇게 입력하면 에러남.
			
queue[wp++] = new Q(0, 0);


str.compareTo(String ddd) == 0    //   str == ddd 면 0
------------------
Arrays.sort(array, new Comparator<int[]>() {
			@Override
			public int compare(int[] a, int[] b) {
				return (a[1] <= b[1]) ? -1 : 1;
			}
		});

-------
Comparator<int[]> com1 = new Comparator<int[]>() {
        @Override
        public int compare(int[] o1, int[] o2) {
            return o1[0] -o2[0]; // 반대로 바꾸면 큰값부터 내림차순 정렬
        }
    };
Arrays.sort(arr, com1);
--------


void strcopy(char []dst, char []src){
        dst = new char[src.length];
        for(int i=0;i<src.length;i++) dst[i]=src[i];
    }



--------------------------------------------------------------------

int[] nums1 = {00,10,20,30,40,50};
System.out.println("nums1: " + Arrays.toString(nums1));

--> nums1: [0, 10, 20, 30, 40, 50]
---------------------------------------------------------------------

Arrays.sort(ages,3,6)  : 숫자 (3,6)는 인덱스임. 마지막 6은 인덱스에 +1한 값을 주어야 전체 범위가 들어감.
--> Arrays.sort(ages,0,6)  -> ages 마지막 인덱스가 5면 (+1) 하여 6으로 지정.


 int arr[] = {1, 24, 32, 9, 16, 17, 22, 7};
 Arrays.sort(arr, 2, 4);  // [1][24][9][32][16][17][22][7]  // 인덱스 2와 인덱스 3 (표현은 인덱스+1-> 4)사이의 교환

----------------------------------------------------------------------
Map<String, Integer> hs = new HashMap<>();

String [] s = {"pear","mango","banana","pine","apple","pear","apple","pear","apple"};	
for (String i: s) {
    if (hs.containsKey(i)) {
        System.out.println("---put : "+i);
        hs.put(i, hs.get(i)+1);
    } else {
    // 해당 인덱스가 없으면 생성 후 +1				
        System.out.println("---create : "+i);				
        hs.put(i,1);	
    }
}
String str="";
	for(String key : hs.keySet()) {  // 저장된 키들 모두 리스팅
		cnt = hs.get(key); // 해당 키가 몇개가 있나
		cnt2[cnt]++;       // 몇개짜리가 몇개씩 있나
}
======================================

int [] a = {43, 2, 6, 8, 5, 9, 10, 57};
Arrays.sort(a);
 // 오름차순
  // Integer [] b = {43, 2, 6, 8, 5, 9, 10, 57};
Integer[] b = Arrays.stream( a ).boxed().toArray( Integer[]::new );		
Arrays.sort(b, Collections.reverseOrder());
 // 내림차순

======================================
// queue 생성.
Queue<Integer> q = new LinkedList<>();

q.offer(5);  // 5를 데이터로 넣음 
int val2 = q.poll();  // Queue에서 빼냄 
q.isEmpty();  // True면 empty

for(int i = 0; i < k - 1; i++) {
    int val = q.poll();
    System.out.printf(" polling : %d \n", val);
    q.offer(val);
}   // 원형 queue 를 만드는 방법 

======================================

String str = "Hello World"; 
System.out.print(str.charAt(0));
// H 만 출력


String from = "123";
int to = Integer.parseInt(from);

int from = 123;
String to = Integer.toString(from);
	
======================================
char[][] map;
map = new char[R+2][C+2];		
for(int i=1; i<=R; i++)
    map[i] = ("W" + sc.next() + "W").toCharArray();    
      // 스트링.toCharArray();
======================================
java 큰숫자 다루기
https://coding-factory.tistory.com/604

BigInteger bigNumber1 = new BigInteger("100000"); // int -> BigInteger
BigInteger bigNumber = BigInteger.valueOf(100000); //int -> BigInteger
int int_bigNum = bigNumber.intValue(); //BigIntger -> int

https://www.acmicpc.net/blog/view/3
https://cjred.net/2018-12-03-how-to-use-java-hashmap-effectively/

---- 
큰수 입력 받기.

import java.util.*;
import java.math.*;

public class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        BigInteger a = sc.nextBigInteger();
        BigInteger b = sc.nextBigInteger();
        BigInteger sum = a.add(b);
        System.out.println(sum.toString());
    }
}
--------------------------
https://woopi1087.tistory.com/82  자바 중복 제거
https://lnsideout.tistory.com/entry/JAVA-%EC%9E%90%EB%B0%94-%EB%B0%B0%EC%97%B4-ArrayList-%EC%A4%91%EB%B3%B5%EC%A0%9C%EA%B1%B0-%EB%AA%A8%EB%93%A0%EB%B0%A9%EB%B2%95

--------------------------
ArrayList 다루기
(ArrayList --> Array)

String [] arr; 
ArrayList<String> testList = new ArrayList<>();
testList.add("2");
testList.add("3");
//Convert the arraylist back to an array
arr = new String[ testList.size() ];
testList.toArray(arr);

-----------------------------------
자바 특정 문자열 존재  확인.

String str = "mytest.tistory.com";
System.out.println(str.indexOf("story"));  // --> 9 (번째 인덱스)
System.out.println(str.indexOf("seoul"));  // -->  -1 (없음)

-----------------------------------
자바 특정문자(문자열) 위치. 
String str = "mytest.tistory.com";
System.out.println(str.indexOf("story"));  // 9 (번째 인덱스)
System.out.println(str.indexOf("seoul"));  // -1 (없음)
System.out.println(str.indexOf("ti")));      // 7 (번째 인덱스)
-----------------------------------
자바 특정 문자열 다루기.
String str = "mytest.tistory.com";
String piece1 = str.substring(2);  -->test.tistory.com
String piece2 = str.substring(2,7); -->test.

-----------------------------------
원하는 문자부터 시작
String str = "mytest.tistory.com";
String piece = str.substring(str.indexOf("ti"));
System.out.println(piece);
--> tistory.com

------------------------------------
배열 붙이기
String[] strs1 = {"a","b","c"};
String[] strs2 = {"d","e","f"};
String[] strs3 = ArrayUtils.add(strs2,"g");
 --> d e f g 

strs3 = ArrayUtils.addAll(strs1,strs3);
-->a b c d e f g

------------------------------------------------------
// ArrayList내에서 특정 스트링 포함 여부 확인가능

if(!arrayList.contains(item)) {   
       arrayList.add(item);
}
-----------------------------------------------------
 Scanner sc = new Scanner(System.in);

        // 한줄로 입력받아서 필요한 부분들 파싱.
        String inputData = sc.nextLine();
        int row = inputData.charAt(1) - '0';
        int column = inputData.charAt(0) - 'a' + 1;

----------------------------------------------------
Base64 설명
https://ktko.tistory.com/114

-----------------------------------------------------
Arrays.sort(arr);  // 오름차순
Arrays.sort(arr, Collections.reverseOrder());     // 역순 (내림차순)

Collections.reverse(v);   // v : ArrayList


====================================
====================================
<Python grammar>

a = 1e9
a = 3954-3

==============================

a = 0.3 + 0.6
print(round(a,4))

if round(a,4) == 0.9:
    print(True)
else:
    print(False)
	
==============================
a = 7
b = 3

#나누기
print(a / b)

#나머지 
print(a % b)

#몫
print(a // b)  	

a = 5
b = 3

print(a**b)

==============================
 	
a = [1,2,3,4,5,6,7,8,9]
print(a)

print(a[4])

#빈 리스트 선언방법 (1)
a = list()
print(a)

#빈 리스트 선언방법 (2)
a = []
print(a)

==============================

# 크기가 N이고, 모든 값이 0인 1차원 리스트 초기화
n = 10
a = [0]*n
print(a)

==============================

a = [1,2,3,4,5,6,7,8,9]
# 뒤에서 첫번째 원소 출력
print(a[-1])

# 뒤에서 세번째 원소 출력
print(a[-3])

# 네번째 원소값 변경
a[3] = 7
print(a)

==============================

a = [1,2,3,4,5,6,7,8,9]

#두번째 원소부터 네번째 원소까지
print(a[1:4])

#0부터 19까지 수 중에서 홀수만 포함하는 리스트
array = [i for i in range(20) if i % 2 == 1]
print(array)

#1부터 9까지의 수의 제곱값을 포함하는 리스트
array = [i * i for i in range(1,10)]
print(array)

# NxM 크기의 2차원 리스트 초기화 
n=3
m=4
array = [[0] * m for _ in range(n)]
print(array)

[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

======================================

summary = 0
for i in range(1,10):
	summary += i
print(summary)

#단순히 5회 반복
for _ in range(5):
	print("Hello World")
	
======================================

a=[1,4,3]
print("기본 : ", a)

#insert
a.append(2)    #1 4 3 2
print("insert : ", a)

#ascend sort
a.sort()
print("asecend sort : ", a)

#descend sort
a.sort(reverse = True)
print("descend sort : ", a)

#reverse
a.reverse()    #1 2 3 4
print(reverse : ", a)

#특정 인덱스에 데이터 추가
a.insert(2,3)   #1 2 3 3 4
print("인덱스 2에 3 추가:", a)

#특정 값인 데이터 갯수 세기
print("값이 3인 데이터 갯수 : ", a.count(3))  # 2

#특정 값 데이터 삭제
a.remove(1)      # 2 3 3 4
print(값이 1인 데이터 삭제: ", a)   

======================================

a = [1,2,3,4,5,5,5]
remove_set = {3,5}

#remove_set에 포함되지 않은 값만을 저장

result = [i for i in a if i not in remove_set] //
print(result)

-------------------------------- # 위 아래는 동일한 결과 

a = [1,2,3,4,5,5,5]
remove_set = {3,5}

result = []
for i in a:
    if i not in remove_set:
        result.append(i)
        
print(result)

--------------------------------

scores = [90,85,77,65,97]
cheating_list = {2, 4}

for i in range(5):
    if i+1 in cheating_list:
        continue
    if scores[i] >= 80:
        print(i+1, "번 학생은 합격.")







======================================

data = 'Hello World'
print(data)

data = 'Don't you know \"Python\"?"
print(data)

======================================
a = "String"
print(a *3)   # StringStringString

a = "ABCDEF"
print(a[2 : 4])    #CD

======================================

#튜플 자료형  (변경 금지 용도)

a = {1,2,3,4}
print(a)

a[2] = 7


======================================

data = dict()
data['사과'] = 'apple'
data['바나나'] = 'banana'
data['배'] = 'pear'

if '사과' in data:
    print("'사과'를 키로 가지는 데이터가 존재함")

======================================

data = dict()   # data = {} 으로 해도 되는 듯.
data['사과'] = 'apple'
data['바나나'] = 'banana'
data['배'] = 'pear'

#키 데이터만 담은 리스트
key_list = data.keys()

#값 데이터만 담은 리스트
value_list = data.values()
print(key_list)
#dict_keys(['사과', '바나나', '배'])

print(value_list)
#dict_values(['apple', 'banana', 'pear'])

#각 키에 따른 값을 하나씩 출력
for key in key_list:
    print(data[key])
    
#apple
#banana
#pear    
    
======================================
#집합 자료형

#초기화#1
data = set([1,1,2,3,4,4,5])
print(data)
#{1, 2, 3, 4, 5}

#초기화#2
data = {1,1,2,3,4,4,5}
print(data)
#{1, 2, 3, 4, 5}
======================================
a = set([1,2,3,4,5])
b = set([3,4,5,6,7])

print(a | b) #합집합
print(a & b) #교집합
print(a - b) #차집합

#{1, 2, 3, 4, 5, 6, 7}
#{3, 4, 5}
#{1, 2}

======================================
data = set([1,2,3])
print(data)

#새로운 원소 추가
data.add(4)
print(data)

#새로운 원소 여러개 추가
data.update([5,6])
print(data)

#특정한 값을 갖는 원소 삭제
data.remove(3)
print(data)

======================================





